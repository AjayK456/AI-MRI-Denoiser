


# 🧠 MRI Image Denoising AI Tool

## Overview

This project presents an AI-powered tool designed for **denoising MRI images**, producing clean and high-quality outputs suitable for **medical analysis and diagnostic testing**. The tool leverages deep learning techniques to suppress noise artifacts commonly present in raw MRI scans, helping radiologists and researchers obtain clearer visual data for accurate interpretation.

## 🔬 Purpose

MRI scans often suffer from various types of noise due to hardware limitations or patient movement. This noise can obscure critical features and hinder diagnostic accuracy. Our AI model is trained to:

* Detect and reduce noise from MRI images.
* Preserve fine details and anatomical structures.
* Provide denoised outputs for further medical evaluation or use in downstream AI pipelines.

## 💡 Key Features

* ✅ Deep Learning-based denoising model (e.g., DnCNN, UNet, or custom CNN)
* ✅ Support for grayscale and multi-channel MRI formats (DICOM, PNG, etc.)
* ✅ Batch processing of multiple MRI scans
* ✅ Comparison of noisy vs. denoised images
* ✅ Easy-to-use interface (CLI or GUI)
* ✅ Export-ready clean images for integration into PACS or research tools

## 📁 Project Structure


MRI-Denoising-AI/
├── data/               # Sample MRI images (noisy and ground truth)
├── models/             # Pretrained models or training scripts
├── src/                # Core codebase for model, preprocessing, etc.
│   ├── preprocess.py
│   ├── denoise.py
│   └── evaluate.py
├── outputs/            # Denoised image results
├── requirements.txt    # Python dependencies
└── README.md           # Project description
```

## 🚀 Getting Started

### Prerequisites

* Python 3.7+
* PyTorch or TensorFlow
* OpenCV
* NumPy
* pydicom (if handling DICOM images)

Install dependencies:

```bash
pip install -r requirements.txt
```

### Usage

To denoise a single MRI image:

```bash
python src/denoise.py --input path/to/noisy_image.png --output path/to/clean_image.png
```

To run on a folder of images:

```bash
python src/denoise.py --input_dir path/to/folder --output_dir path/to/output_folder
```

## 🧪 Model Training (Optional)

If you wish to train the model on custom data:

```bash
python src/train.py --data_dir data/ --epochs 50 --model_output models/denoiser.pth
```

## 📊 Evaluation

Use PSNR, SSIM, and other metrics to evaluate denoising performance:

```bash
python src/evaluate.py --ground_truth data/clean/ --predicted outputs/
```

## 🏥 Applications

* Preprocessing for radiological AI models
* Enhanced radiology workflow with cleaner scans
* Research and academic studies requiring high-SNR MRI data

## 🔒 Disclaimer

> This tool is **not certified for clinical use**. It is intended for **research and educational purposes only**. Consult certified medical professionals for clinical interpretation of MRI results.

## 📫 Contact

For queries, collaborations, or feedback:

* Author: Ajay.K
* Email: kulankaraajay@gmail.com
* GitHub: https://github.com/AjayK456


